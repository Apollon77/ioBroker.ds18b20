{"version":3,"file":"types.js","sourceRoot":"/","sources":["common/types.ts"],"names":[],"mappings":";AAAA;;GAEG","sourcesContent":["/*\n * Types used by the adapter and the remote client.\n */\n\n/**\n * ioBroker object for a single sensor.\n */\nexport interface SensorObject extends ioBroker.StateObject {\n  native: {\n    address: string;\n    factor: number;\n    offset: number;\n    decimals: number | null;\n    interval: number;\n    nullOnError: boolean;\n    remoteSystemId: string | null;\n  };\n}\n\n/**\n * Remote data request/response for client information.\n */\nexport interface RemoteDataClientInfo {\n  cmd: 'clientInfo';\n  systemId?: string;\n}\n\n/**\n * Remote data request/response for sensor read.\n */\nexport interface RemoteDataRead {\n  cmd: 'read';\n  address: string;\n  raw?: string;\n}\n\n/**\n * Remote data request/response for sensor search.\n */\nexport interface RemoteDataSearch {\n  cmd: 'search';\n  addresses?: string[];\n  systemId?: string;\n}\n\n/**\n * Remote data request/response for all types.\n */\nexport type RemoteData = RemoteDataClientInfo | RemoteDataRead | RemoteDataSearch;\n"]}