{
  "version": 3,
  "sources": ["../../src/lib/utils.ts"],
  "sourcesContent": ["import * as crypto from 'crypto';\n\n/**\n * Round a floating point number to the given precision.\n * @param num       The number.\n * @param precision The number of decimals to round to.\n * @return          The rounded number.\n */\nexport function round (num: number, precision: number): number {\n  if(precision == 0) return Math.round(num);\n\n  let exp = 1;\n  for(let i=0; i < precision; i++) {\n    exp *= 10;\n  }\n\n  return Math.round(num * exp) / exp;\n}\n\n/**\n * Create a random hex string.\n * @param len Length of the string to generate. Should be a multiple of 2.\n */\nexport function genHexString (len: number): string {\n  const bytes = crypto.randomBytes(len / 2);\n  return [...bytes]\n    .map((x) => x.toString(16).padStart(2, '0'))\n    .join('');\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAwB;AAQjB,SAAS,MAAO,KAAa,WAA2B;AAC7D,MAAG,aAAa;AAAG,WAAO,KAAK,MAAM,GAAG;AAExC,MAAI,MAAM;AACV,WAAQ,IAAE,GAAG,IAAI,WAAW,KAAK;AAC/B,WAAO;AAAA,EACT;AAEA,SAAO,KAAK,MAAM,MAAM,GAAG,IAAI;AACjC;AAMO,SAAS,aAAc,KAAqB;AACjD,QAAM,QAAQ,OAAO,YAAY,MAAM,CAAC;AACxC,SAAO,CAAC,GAAG,KAAK,EACb,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC,EAC1C,KAAK,EAAE;AACZ;",
  "names": []
}
