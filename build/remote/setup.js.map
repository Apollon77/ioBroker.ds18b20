{"version":3,"file":"setup.js","sourceRoot":"/","sources":["remote/setup.ts"],"names":[],"mappings":";;AAMA,yBAAyB;AACzB,yBAAyB;AACzB,6BAA6B;AAE7B,MAAM,oBAAoB,GAAG,iCAAiC,CAAC;AAE/D,MAAM,KAAK,GAA2B;IACpC,IAAI,EAAE,OAAO;CACd,CAAC;AAEF,KAAK,MAAM,CAAC,IAAI,KAAK,EAAE;IACrB,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClE,EAAE,CAAC,aAAa,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC;CACrD;AAED,MAAM,cAAc,GAAG;;;;;;;OAOhB,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ;mBACV,SAAS;YAChB,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,0BAA0B,CAAC;;;;;CAK/E,CAAC;AAEF,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAAC;AAC/D,EAAE,CAAC,aAAa,CAAC,WAAW,EAAE,cAAc,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC;AAErE,MAAM,aAAa,GAAG;;;;;;;;;;;;;;;;;;;CAmBrB,CAAC;AAEF,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;AAChD,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;IAC9B,EAAE,CAAC,aAAa,CAAC,UAAU,EAAE,aAAa,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC;CACpE;AAED,OAAO,CAAC,GAAG,CAAC;;;;;;;;;;YAUA,oBAAoB,wBAAwB,oBAAoB;;0BAElD,oBAAoB;yBACrB,oBAAoB;CAC5C,CAAC,CAAC","sourcesContent":["/**\n * Setup script for the remote client.\n * This will be updated with some file contents by `build-remote-client-setup.js`\n * and saved in `admin/remote-client-setup.js`.\n */\n\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as path from 'path';\n\nconst SYSTEMD_SERVICE_NAME = 'iobroker-ds18b20-remote.service';\n\nconst files: Record<string, string> = {\n  FILE: 'DUMMY' // will be replaced during remote-client-setup creation\n};\n\nfor (const f in files) {\n  const content = Buffer.from(files[f], 'base64').toString('utf-8');\n  fs.writeFileSync(f, content, { encoding: 'utf-8' });\n}\n\nconst systemDContent = `[Unit]\nDescription=ioBroker.ds18b20 remote client\nDocumentation=https://github.com/crycode-de/ioBroker.ds18b20\nAfter=network.target\n\n[Service]\nType=simple\nUser=${os.userInfo().username}\nWorkingDirectory=${__dirname}\nExecStart=${process.execPath} ${path.join(__dirname, 'ds18b20-remote-client.js')}\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target\n`;\n\nconst systemDFile = path.join(__dirname, SYSTEMD_SERVICE_NAME);\nfs.writeFileSync(systemDFile, systemDContent, { encoding: 'utf-8' });\n\nconst dotEnvContent = `# Settings for the ioBroker.ds18b20 remote client\n\n# Unique ID for this remote system\nSYSTEM_ID=my-remote\n\n# IP or hostname of the ioBroker host running the adapter\nADAPTER_HOST=\n\n# Port from the adapter config\nADAPTER_PORT=1820\n\n# Encryption key from the adapter config\nADAPTER_KEY=\n\n# Enable debug log output\n#DEBUG=1\n\n# System path of the 1-wire devices\n#W1_DEVICES_PATH=/sys/bus/w1/devices\n`;\n\nconst dotEnvFile = path.join(__dirname, '.env');\nif (!fs.existsSync(dotEnvFile)) {\n  fs.writeFileSync(dotEnvFile, dotEnvContent, { encoding: 'utf-8' });\n}\n\nconsole.log(`- ioBroker.ds18b20 remote client -\n\nBasic setup done.\n\nPlease adjust the settings in the .env file.\n\nTo manually start the client just run:\n  node ds18b20-remote-client.js\n\nTo setup the SystemD service, please run:\n  sudo cp ${SYSTEMD_SERVICE_NAME} /etc/systemd/system/${SYSTEMD_SERVICE_NAME}\n  sudo systemctl daemon-reload\n  sudo systemctl enable ${SYSTEMD_SERVICE_NAME}\n  sudo systemctl start ${SYSTEMD_SERVICE_NAME}\n`);\n"]}