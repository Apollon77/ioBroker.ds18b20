{"version":3,"file":"ds18b20-remote.js","sourceRoot":"/","sources":["ds18b20-remote.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,6BAA6B;AAC7B,yBAAyB;AACzB,uCAAoC;AAEpC,0CAGwB;AAMxB,MAAM,aAAa;IAcjB;QAJQ,qBAAgB,GAA0B,IAAI,CAAC;QAE/C,aAAQ,GAAW,EAAE,CAAC;QAG5B,eAAe;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEvC,oBAAoB;QACpB,IAAI,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE;YACzB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;SAC9C;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC;YAC9B,OAAO,CAAC,IAAI,CAAC,6BAA6B,IAAI,CAAC,QAAQ,wDAAwD,CAAC,CAAC;SAClH;QAED,mBAAmB;QACnB,IAAI,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE;YAC5B,IAAI;gBACF,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;aAC3D;YAAC,OAAO,GAAG,EAAE;gBACZ,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,GAAG,CAAC,CAAC;gBACpD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACjB;SACF;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACzB;QAED,mBAAmB;QACnB,IAAI,CAAC,WAAW,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QAC3D,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,EAAE;YAChC,OAAO,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;YAChD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACjB;QAED,yBAAyB;QACzB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,EAAE,EAAE,KAAK,CAAC,CAAC;QACpE,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,EAAE,EAAE;YACjC,OAAO,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAC;YACtD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACjB;QAED,2BAA2B;QAC3B,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAChC,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAEjC,oBAAoB;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,YAAM,EAAE,CAAC;QAE3B,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAGtC,iBAAiB;QACjB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAEO,OAAO;QACb,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SACrC;QAED,OAAO,CAAC,GAAG,CAAC,wBAAwB,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,MAAM,CAAC,CAAA;QAE/E,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;YAClB,IAAI,EAAE,IAAI,CAAC,WAAW;YACtB,IAAI,EAAE,IAAI,CAAC,WAAW;SACvB,EAAE,GAAG,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAChC,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACzB,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;aACrC;YACD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,MAAM,CAAE,IAAY;QAC1B,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEjC,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,GAAG,GAAG,CAAC,EAAE;YACX,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;SAC5B;IACH,CAAC;IAEO,gBAAgB,CAAE,GAAW;QACnC,oCAAoC;QACpC,IAAI,IAAgB,CAAC;QACrB,IAAI;YACF,MAAM,OAAO,GAAG,eAAO,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAC9C,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAC5B;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,IAAI,CAAC,kCAAkC,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;YACjE,mBAAmB;YACnB,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;YAClB,OAAO;SACR;QAED,QAAQ,IAAI,CAAC,GAAG,EAAE;YAChB,KAAK,YAAY;gBACf,OAAO,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAA;gBACzD,IAAI,CAAC,IAAI,CAAC;oBACR,GAAG,EAAE,YAAY;oBACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;iBACxB,CAAC,CAAC;gBACH,MAAM;YAER;gBACE,OAAO,CAAC,IAAI,CAAC,2BAA2B,IAAI,CAAC,GAAG,gBAAgB,CAAC,CAAC;SACrE;IACH,CAAC;IAEO,OAAO,CAAE,GAAU;QACzB,OAAO,CAAC,IAAI,CAAC,sBAAsB,EAAE,GAAG,CAAC,CAAC;QAE1C,+BAA+B;QAC/B,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;QAElB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAEO,OAAO;QACb,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAEO,SAAS;QACf,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAC1B,qBAAqB;YACrB,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;YAC9C,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;SACzD;IACH,CAAC;IAEa,IAAI,CAAE,IAAgB;;YAClC,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBAC3C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,eAAO,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;oBAC/E,IAAI,GAAG,EAAE;wBACP,MAAM,CAAC,GAAG,CAAC,CAAC;qBACb;yBAAM;wBACL,OAAO,EAAE,CAAC;qBACX;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAA;QACJ,CAAC;KAAA;IAEO,IAAI;QACV,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SACrC;QAED,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;IACpB,CAAC;CACF;AAED,IAAI,aAAa,EAAE,CAAC","sourcesContent":["import { Socket } from 'net';\nimport * as os from 'os';\nimport 'source-map-support/register'\n\nimport {\n  encrypt,\n  decrypt,\n} from './common/crypt';\n\nimport {\n  RemoteData,\n} from './common/types';\n\nclass Ds18b20Remote {\n\n  private readonly adapterHost: string;\n  private readonly adapterPort: number;\n  private readonly adapterKey: Buffer;\n\n  private readonly systemId: string;\n\n  private socket: Socket;\n\n  private reconnectTimeout: NodeJS.Timeout | null = null;\n\n  private recvData: string = '';\n\n  constructor () {\n    // bind methods\n    this.connect = this.connect.bind(this);\n    this.exit = this.exit.bind(this);\n    this.onClose = this.onClose.bind(this);\n    this.onData = this.onData.bind(this);\n    this.onError = this.onError.bind(this);\n\n    // get the system ID\n    if (process.env.SYSTEM_ID) {\n      this.systemId = process.env.SYSTEM_ID.trim();\n    } else {\n      this.systemId = os.hostname();\n      console.warn(`[Warn] Using the hostname ${this.systemId} as system ID. Please set SYSTEM_ID to a unique value.`);\n    }\n\n    // get adapter port\n    if (process.env.ADAPTER_PORT) {\n      try {\n        this.adapterPort = parseInt(process.env.ADAPTER_PORT, 10);\n      } catch (err) {\n        console.error(`[Error] Invalid ADAPTER_PORT!`, err);\n        process.exit(1);\n      }\n    } else {\n      this.adapterPort = 1820;\n    }\n\n    // get adapter host\n    this.adapterHost = (process.env.ADAPTER_HOST || '').trim();\n    if (this.adapterHost.length <= 0) {\n      console.error(`[Error] No ADAPTER_HOST given!`);\n      process.exit(1);\n    }\n\n    // get the encryption key\n    this.adapterKey = Buffer.from(process.env.ADAPTER_KEY || '', 'hex');\n    if (this.adapterKey.length !== 32) {\n      console.error(`[Error] ADAPTER_KEY is no valid key!`);\n      process.exit(1);\n    }\n\n    // register signal handlers\n    process.on('SIGINT', this.exit);\n    process.on('SIGTERM', this.exit);\n\n    // create the socket\n    this.socket = new Socket();\n\n    this.socket.on('close', this.onClose);\n    this.socket.on('data', this.onData);\n    this.socket.on('error', this.onError);\n\n\n    // try to connect\n    this.connect();\n  }\n\n  private connect (): void {\n    if (this.reconnectTimeout) {\n      clearTimeout(this.reconnectTimeout);\n    }\n\n    console.log(`[Info] Connecting to ${this.adapterHost}:${this.adapterPort} ...`)\n\n    this.socket.connect({\n      host: this.adapterHost,\n      port: this.adapterPort,\n    }, () => {\n      console.log(`[Info] Connected`);\n      if (this.reconnectTimeout) {\n        clearTimeout(this.reconnectTimeout);\n      }\n      this.reconnectTimeout = null;\n    });\n  }\n\n  private onData (data: Buffer): void {\n    this.recvData += data.toString();\n\n    const idx = this.recvData.indexOf('\\n');\n    if (idx > 0) {\n      const raw = this.recvData.slice(0, idx);\n      this.recvData = this.recvData.slice(idx + 1);\n      this.handleSocketData(raw);\n    }\n  }\n\n  private handleSocketData (raw: string): void {\n    // try to decrypt and parse the data\n    let data: RemoteData;\n    try {\n      const dataStr = decrypt(raw, this.adapterKey);\n      data = JSON.parse(dataStr);\n    } catch (err) {\n      console.warn(`[Warn] Decrypt of data failed! ${err.toString()}`);\n      // close the socket\n      this.socket.end();\n      return;\n    }\n\n    switch (data.cmd) {\n      case 'clientInfo':\n        console.info('[Info] Sending client info to the adapter')\n        this.send({\n          cmd: 'clientInfo',\n          systemId: this.systemId,\n        });\n        break;\n\n      default:\n        console.warn(`[Warn] Unknown command \"${data.cmd}\" from adapter`);\n    }\n  }\n\n  private onError (err: Error): void {\n    console.warn(`[Warn] Socket error:`, err);\n\n    // close the socket on an error\n    this.socket.end();\n\n    this.reconnect();\n  }\n\n  private onClose (): void {\n    console.info('[Info] Socket closed');\n    this.reconnect();\n  }\n\n  private reconnect (): void {\n    if (!this.reconnectTimeout) {\n      // schedule reconnect\n      console.log(`[Info] Reconnect in 30 seconds`);\n      this.reconnectTimeout = setTimeout(this.connect, 30000);\n    }\n  }\n\n  private async send (data: RemoteData): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.socket.write(encrypt(JSON.stringify(data), this.adapterKey) + '\\n', (err) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      });\n    })\n  }\n\n  private exit (): void {\n    if (this.reconnectTimeout) {\n      clearTimeout(this.reconnectTimeout);\n    }\n\n    this.socket.end();\n  }\n}\n\nnew Ds18b20Remote();\n"]}