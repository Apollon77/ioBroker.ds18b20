"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs");
const os = require("os");
const path = require("path");
const SYSTEMD_SERVICE_NAME = 'iobroker-ds18b20-remote.service';
const files = {
    'common.js': 'InVzZSBzdHJpY3QiOwpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7IHZhbHVlOiB0cnVlIH0pOwpleHBvcnRzLmRlY3J5cHQgPSBleHBvcnRzLmVuY3J5cHQgPSBleHBvcnRzLlJFTU9URV9QUk9UT0NPTF9WRVJTSU9OID0gdm9pZCAwOwpjb25zdCBjcnlwdG8gPSByZXF1aXJlKCJjcnlwdG8iKTsKZXhwb3J0cy5SRU1PVEVfUFJPVE9DT0xfVkVSU0lPTiA9IDM7CmNvbnN0IElWX0xFTkdUSCA9IDE2OwpmdW5jdGlvbiBlbmNyeXB0KHRleHQsIGtleSkgewogICAgY29uc3QgaXYgPSBjcnlwdG8ucmFuZG9tQnl0ZXMoSVZfTEVOR1RIKTsKICAgIGNvbnN0IGNpcGhlciA9IGNyeXB0by5jcmVhdGVDaXBoZXJpdignYWVzLTI1Ni1jYmMnLCBrZXksIGl2KTsKICAgIGxldCBlbmNyeXB0ZWQgPSBjaXBoZXIudXBkYXRlKHRleHQpOwogICAgZW5jcnlwdGVkID0gQnVmZmVyLmNvbmNhdChbZW5jcnlwdGVkLCBjaXBoZXIuZmluYWwoKV0pOwogICAgcmV0dXJuIGl2LnRvU3RyaW5nKCdoZXgnKSArICc6JyArIGVuY3J5cHRlZC50b1N0cmluZygnaGV4Jyk7Cn0KZXhwb3J0cy5lbmNyeXB0ID0gZW5jcnlwdDsKZnVuY3Rpb24gZGVjcnlwdCh0ZXh0LCBrZXkpIHsKICAgIGNvbnN0IHRleHRQYXJ0cyA9IHRleHQuc3BsaXQoJzonKTsKICAgIGNvbnN0IGl2ID0gQnVmZmVyLmZyb20odGV4dFBhcnRzLnNoaWZ0KCksICdoZXgnKTsKICAgIGNvbnN0IGVuY3J5cHRlZFRleHQgPSBCdWZmZXIuZnJvbSh0ZXh0UGFydHMuam9pbignOicpLCAnaGV4Jyk7CiAgICBjb25zdCBkZWNpcGhlciA9IGNyeXB0by5jcmVhdGVEZWNpcGhlcml2KCdhZXMtMjU2LWNiYycsIGtleSwgaXYpOwogICAgbGV0IGRlY3J5cHRlZCA9IGRlY2lwaGVyLnVwZGF0ZShlbmNyeXB0ZWRUZXh0KTsKICAgIGRlY3J5cHRlZCA9IEJ1ZmZlci5jb25jYXQoW2RlY3J5cHRlZCwgZGVjaXBoZXIuZmluYWwoKV0pOwogICAgcmV0dXJuIGRlY3J5cHRlZC50b1N0cmluZygpOwp9CmV4cG9ydHMuZGVjcnlwdCA9IGRlY3J5cHQ7Ci8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVkyOXRiVzl1TG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2TGk0dmMzSmpMM0psYlc5MFpTOWpiMjF0YjI0dWRITWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklqczdPMEZCU1VFc2FVTkJRV2xETzBGQlRYQkNMRkZCUVVFc2RVSkJRWFZDTEVkQlFVY3NRMEZCUXl4RFFVRkRPMEZCVFhwRExFMUJRVTBzVTBGQlV5eEhRVUZITEVWQlFVVXNRMEZCUXp0QlFWRnlRaXhUUVVGblFpeFBRVUZQTEVOQlFVVXNTVUZCZFVJc1JVRkJSU3hIUVVGWE8wbEJRek5FTEUxQlFVMHNSVUZCUlN4SFFVRkhMRTFCUVUwc1EwRkJReXhYUVVGWExFTkJRVU1zVTBGQlV5eERRVUZETEVOQlFVTTdTVUZEZWtNc1RVRkJUU3hOUVVGTkxFZEJRVWNzVFVGQlRTeERRVUZETEdOQlFXTXNRMEZCUXl4aFFVRmhMRVZCUVVVc1IwRkJSeXhGUVVGRkxFVkJRVVVzUTBGQlF5eERRVUZETzBsQlF6ZEVMRWxCUVVrc1UwRkJVeXhIUVVGSExFMUJRVTBzUTBGQlF5eE5RVUZOTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNN1NVRkZjRU1zVTBGQlV5eEhRVUZITEUxQlFVMHNRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeERRVUZETEV0QlFVc3NSVUZCUlN4RFFVRkZMRU5CUVVNc1EwRkJRenRKUVVWNlJDeFBRVUZQTEVWQlFVVXNRMEZCUXl4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRExFZEJRVWNzUjBGQlJ5eEhRVUZITEZOQlFWTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU03UVVGRE9VUXNRMEZCUXp0QlFWSkVMREJDUVZGRE8wRkJVVVFzVTBGQlowSXNUMEZCVHl4RFFVRkZMRWxCUVZrc1JVRkJSU3hIUVVGWE8wbEJRMmhFTEUxQlFVMHNVMEZCVXl4SFFVRkhMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTTdTVUZEYkVNc1RVRkJUU3hGUVVGRkxFZEJRVWNzVFVGQlRTeERRVUZETEVsQlFVa3NRMEZCUXl4VFFVRlRMRU5CUVVNc1MwRkJTeXhGUVVGWkxFVkJRVVVzUzBGQlN5eERRVUZETEVOQlFVTTdTVUZETTBRc1RVRkJUU3hoUVVGaExFZEJRVWNzVFVGQlRTeERRVUZETEVsQlFVa3NRMEZCUXl4VFFVRlRMRU5CUVVNc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eEZRVUZGTEV0QlFVc3NRMEZCUXl4RFFVRkRPMGxCUXpsRUxFMUJRVTBzVVVGQlVTeEhRVUZITEUxQlFVMHNRMEZCUXl4blFrRkJaMElzUTBGQlF5eGhRVUZoTEVWQlFVVXNSMEZCUnl4RlFVRkZMRVZCUVVVc1EwRkJReXhEUVVGRE8wbEJRMnBGTEVsQlFVa3NVMEZCVXl4SFFVRkhMRkZCUVZFc1EwRkJReXhOUVVGTkxFTkJRVU1zWVVGQllTeERRVUZETEVOQlFVTTdTVUZGTDBNc1UwRkJVeXhIUVVGSExFMUJRVTBzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUlN4VFFVRlRMRVZCUVVVc1VVRkJVU3hEUVVGRExFdEJRVXNzUlVGQlJTeERRVUZGTEVOQlFVTXNRMEZCUXp0SlFVVXpSQ3hQUVVGUExGTkJRVk1zUTBGQlF5eFJRVUZSTEVWQlFVVXNRMEZCUXp0QlFVTTVRaXhEUVVGRE8wRkJWa1FzTUVKQlZVTWlmUT09',
'ds18b20-remote-client.js': '',
'logger.js': 'InVzZSBzdHJpY3QiOwpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7IHZhbHVlOiB0cnVlIH0pOwpleHBvcnRzLkxvZ2dlciA9IHZvaWQgMDsKY2xhc3MgTG9nZ2VyIHsKICAgIGxvZyguLi5hcmdzKSB7CiAgICAgICAgY29uc29sZS5sb2coLi4uYXJncyk7CiAgICB9CiAgICBkZWJ1ZyguLi5hcmdzKSB7CiAgICAgICAgaWYgKCFwcm9jZXNzLmVudi5ERUJVRykgewogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgIGNvbnNvbGUubG9nKCdbRGVidWddJywgLi4uYXJncyk7CiAgICB9CiAgICBpbmZvKC4uLmFyZ3MpIHsKICAgICAgICBjb25zb2xlLmxvZygnW0luZm9dJywgLi4uYXJncyk7CiAgICB9CiAgICB3YXJuKC4uLmFyZ3MpIHsKICAgICAgICBjb25zb2xlLndhcm4oJ1tXYXJuXScsIC4uLmFyZ3MpOwogICAgfQogICAgZXJyb3IoLi4uYXJncykgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ1tFcnJvcl0nLCAuLi5hcmdzKTsKICAgIH0KfQpleHBvcnRzLkxvZ2dlciA9IExvZ2dlcjsKLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYkc5bloyVnlMbXB6SWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE1pT2xzaUxpNHZMaTR2YzNKakwzSmxiVzkwWlM5c2IyZG5aWEl1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWpzN08wRkJSMEVzVFVGQllTeE5RVUZOTzBsQlRWWXNSMEZCUnl4RFFVRkZMRWRCUVVjc1NVRkJWenRSUVVONFFpeFBRVUZQTEVOQlFVTXNSMEZCUnl4RFFVRkRMRWRCUVVjc1NVRkJTU3hEUVVGRExFTkJRVU03U1VGRGRrSXNRMEZCUXp0SlFVOU5MRXRCUVVzc1EwRkJSU3hIUVVGSExFbEJRVmM3VVVGRE1VSXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhIUVVGSExFTkJRVU1zUzBGQlN5eEZRVUZGTzFsQlEzUkNMRTlCUVU4N1UwRkRVanRSUVVORUxFOUJRVThzUTBGQlF5eEhRVUZITEVOQlFVTXNVMEZCVXl4RlFVRkZMRWRCUVVjc1NVRkJTU3hEUVVGRExFTkJRVU03U1VGRGJFTXNRMEZCUXp0SlFVMU5MRWxCUVVrc1EwRkJSU3hIUVVGSExFbEJRVmM3VVVGRGVrSXNUMEZCVHl4RFFVRkRMRWRCUVVjc1EwRkJReXhSUVVGUkxFVkJRVVVzUjBGQlJ5eEpRVUZKTEVOQlFVTXNRMEZCUXp0SlFVTnFReXhEUVVGRE8wbEJUVTBzU1VGQlNTeERRVUZGTEVkQlFVY3NTVUZCVnp0UlFVTjZRaXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEZGQlFWRXNSVUZCUlN4SFFVRkhMRWxCUVVrc1EwRkJReXhEUVVGRE8wbEJRMnhETEVOQlFVTTdTVUZQVFN4TFFVRkxMRU5CUVVVc1IwRkJSeXhKUVVGWE8xRkJRekZDTEU5QlFVOHNRMEZCUXl4TFFVRkxMRU5CUVVNc1UwRkJVeXhGUVVGRkxFZEJRVWNzU1VGQlNTeERRVUZETEVOQlFVTTdTVUZEY0VNc1EwRkJRenREUVVOR08wRkJPVU5FTEhkQ1FUaERReUo5'
};
for (const f in files) {
    const content = Buffer.from(files[f], 'base64').toString('utf-8');
    fs.writeFileSync(f, content, { encoding: 'utf-8' });
}
const systemDContent = `[Unit]
Description=ioBroker.ds18b20 remote client
Documentation=https://github.com/crycode-de/ioBroker.ds18b20
After=network.target

[Service]
Type=simple
User=${os.userInfo().username}
WorkingDirectory=${__dirname}
ExecStart=${process.execPath} ${path.join(__dirname, 'ds18b20-remote-client.js')}
Restart=on-failure

[Install]
WantedBy=multi-user.target
`;
const systemDFile = path.join(__dirname, SYSTEMD_SERVICE_NAME);
fs.writeFileSync(systemDFile, systemDContent, { encoding: 'utf-8' });
const dotEnvContent = `# Settings for the ioBroker.ds18b20 remote client

# Unique ID for this remote system
SYSTEM_ID=my-remote

# IP or hostname of the ioBroker host running the adapter
ADAPTER_HOST=

# Port from the adapter config
ADAPTER_PORT=1820

# Encryption key from the adapter config
ADAPTER_KEY=

# Enable debug log output
#DEBUG=1

# System path of the 1-wire devices
#W1_DEVICES_PATH=/sys/bus/w1/devices
`;
const dotEnvFile = path.join(__dirname, '.env');
if (!fs.existsSync(dotEnvFile)) {
    fs.writeFileSync(dotEnvFile, dotEnvContent, { encoding: 'utf-8' });
}
console.log(`- ioBroker.ds18b20 remote client -

Basic setup done.

Please adjust the settings in the .env file.

To manually start the client just run:
  node ds18b20-remote-client.js

To setup the SystemD service, please run:
  sudo cp ${SYSTEMD_SERVICE_NAME} /etc/systemd/system/${SYSTEMD_SERVICE_NAME}
  sudo systemctl daemon-reload
  sudo systemctl enable ${SYSTEMD_SERVICE_NAME}
  sudo systemctl start ${SYSTEMD_SERVICE_NAME}
`);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0dXAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcmVtb3RlL3NldHVwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBTUEseUJBQXlCO0FBQ3pCLHlCQUF5QjtBQUN6Qiw2QkFBNkI7QUFFN0IsTUFBTSxvQkFBb0IsR0FBRyxpQ0FBaUMsQ0FBQztBQUUvRCxNQUFNLEtBQUssR0FBMkI7SUFDcEMsSUFBSSxFQUFFLE9BQU87Q0FDZCxDQUFDO0FBRUYsS0FBSyxNQUFNLENBQUMsSUFBSSxLQUFLLEVBQUU7SUFDckIsTUFBTSxPQUFPLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2xFLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxFQUFFLE9BQU8sRUFBRSxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDO0NBQ3JEO0FBRUQsTUFBTSxjQUFjLEdBQUc7Ozs7Ozs7T0FPaEIsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDLFFBQVE7bUJBQ1YsU0FBUztZQUNoQixPQUFPLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLDBCQUEwQixDQUFDOzs7OztDQUsvRSxDQUFDO0FBRUYsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsb0JBQW9CLENBQUMsQ0FBQztBQUMvRCxFQUFFLENBQUMsYUFBYSxDQUFDLFdBQVcsRUFBRSxjQUFjLEVBQUUsRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQztBQUVyRSxNQUFNLGFBQWEsR0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQW1CckIsQ0FBQztBQUVGLE1BQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0FBQ2hELElBQUksQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxFQUFFO0lBQzlCLEVBQUUsQ0FBQyxhQUFhLENBQUMsVUFBVSxFQUFFLGFBQWEsRUFBRSxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDO0NBQ3BFO0FBRUQsT0FBTyxDQUFDLEdBQUcsQ0FBQzs7Ozs7Ozs7OztZQVVBLG9CQUFvQix3QkFBd0Isb0JBQW9COzswQkFFbEQsb0JBQW9CO3lCQUNyQixvQkFBb0I7Q0FDNUMsQ0FBQyxDQUFDIn0=